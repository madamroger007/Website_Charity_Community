Perbaiki kode logika untuk kode server Flask dalam penanganan Update users untuk kodenya :
Untuk kode validasinya:
class UpdateUsersForm(FlaskForm):
    fullname = StringField('Full Name', validators=[DataRequired()])
    profile_info = StringField('Biodata', validators=[DataRequired()])
    email = StringField('Email', validators=[DataRequired(), Email()])
    maps = StringField('Maps', validators=[DataRequired()])
    no_hp = StringField('Phone Number', validators=[DataRequired()])
    address = TextAreaField('Address', validators=[DataRequired()])
    country = StringField('Country', validators=[DataRequired()])
    submit = SubmitField('Register')

Untuk kode flask nya : 
@app.route("/update_users/<userid>", methods=["POST"])
def update_users(userid):
    token_receive = request.cookies.get(app.config["TOKEN_KEY"])
    try:
        payload = decode_token(token_receive)
        username = payload.get("username")
        form = UpdateNewsform()
        
       
        if form.validate():
            title_receive = form.title_update.data
            description_receive = form.description_update.data
            topic_receive = form.topic_update.data        
            new_doc = {
                "title": title_receive,
                "description": description_receive,
                "topic": topic_receive
            }
            # Check if a new image is uploaded
            if "img_update" in request.files:

                file = request.files.get('img_update')
                # Check if the file is not empty
   
                if file and file.filename:

                    img_url = save_image(file, 'news')
                    new_doc["img"] = img_url
                else:
                    # Handle the case when the file is empty
                    return jsonify({"result": "error", "msg": "No file provided for update"})
            # Update other fields
            db.users.update_one({"_id": ObjectId(userid)}, {"$set":  new_doc })

            return jsonify({"result": "success", "msg": "Update Successful"})
        else:
            # Handle the case when form validation fails
            errors = {field: form[field].errors for field in form.errors}
            return jsonify({"result": "error", "msg": "Form validation failed", "errors": errors})

    except (jwt.ExpiredSignatureError, jwt.exceptions.DecodeError):
        return redirect(url_for("index"))
